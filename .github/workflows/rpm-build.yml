name: RPM Build

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      rpm_name:
        required: true
        type: string
        description: "The name of the RPM."
      rpm_version:
        required: true
        type: string
        description: "The version of the RPM."
      rpm_release:
        required: false
        type: string
        default: "${{ github.run_number }}"
        description: "The release number of the RPM version. Defaults to the GitHub workflow run number."
      rhel_version:
        required: false
        type: number
        default: 8
        description: "Version of RHEL (Default: 8)."
      rpm_source_path:
        required: false
        type: string
        default: "."
        description: "Path to the directory containing rpm SOURCES and spec file (Default: '.')."
      build_artifact:
        required: false
        type: string
        description: "Optional: name of uploaded build artifact that should be put into SOURCES folder before building."
      rpm_artifact_name:
        required: false
        type: string
        default: rpms
        description: "Optional: name of the rpm artifact. Useful to set different names if you want to build rhel7 and rhel8 rpms."
    secrets:
      sign_key:
        required: true
        description: "Key to sign the RPM."
      sign_key_passphrase:
        required: true
        description: "Passphrase for sign key."

jobs:
  build_rpm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create Build Artifacts Directory
        run: mkdir BUILD_ARTIFACTS

      - name: Download Build Artifact
        if: ${{ inputs.build_artifact }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.build_artifact }}
          path: BUILD_ARTIFACTS

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build rpmbuild Container
        uses: docker/build-push-action@v2
        with:
          context: https://github.com/riege/rpm-build.git#main
          file: docker-build/Dockerfile.centos-${{ inputs.rhel_version }}
          load: true
          tags: build-rpm-rhel${{ inputs.rhel_version }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Import GPG key
        id: import_gpg
        uses: hashicorp/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.sign_key }}
          PASSPHRASE: ${{ secrets.sign_key_passphrase }}

      - name: Create RPM macros file
        run: |
          echo "
          %_signature gpg
          %_gpg_name ${{ steps.import_gpg.outputs.fingerprint }}
          %__gpg_sign_cmd /usr/bin/gpg2 gpg --batch --verbose --no-armor --pinentry-mode=loopback --no-secmem-warning  -u '%{_gpg_name}' -sbo %{__signature_filename} %{__plaintext_filename}
          %_topdir /rpmbuild
          %release ${{ inputs.rpm_release }}
          %rpm_release ${{ inputs.rpm_release }}%{?dist}
          %name ${{ inputs.rpm_name }}
          %version ${{ inputs.rpm_version }}
          %debug_package %{nil}
          " > ~/.rpmmacros

      - name: Create ENV file
        run: |
          {
          echo "RPM_NAME=${{ inputs.rpm_name }}"
          } > .env

      - name: Prepare SOURCES
        working-directory: ${{ inputs.rpm_source_path }}
        run: |
          # cleanup unused .gitkeep files
          find SOURCES/ -iname .gitkeep -delete
          # make tarball from original SOURCES
          tar -czvf ${{ github.workspace }}/BUILD_ARTIFACTS/${{ inputs.rpm_name }}.tgz -C SOURCES/ .
          # move all build artifacts to SOURCES
          mv ${{ github.workspace }}/BUILD_ARTIFACTS/* SOURCES/

      - name: Build RPM
        run: |
          mkdir -p ${{ github.workspace }}/RPMS
          docker run --rm \
                     -v "${{ github.workspace }}/${{ inputs.rpm_source_path }}/SOURCES:/rpmbuild/SOURCES" \
                     -v "${{ github.workspace }}/RPMS:/rpmbuild/RPMS" \
                     -v "$HOME/.rpmmacros:/root/.rpmmacros:ro" \
                     -v "${{ github.workspace }}/${{ inputs.rpm_source_path }}/${{ inputs.rpm_name }}.spec:/rpmbuild/SPECS/${{ inputs.rpm_name }}.spec:ro" \
                     --env-file .env \
                     build-rpm-rhel${{ inputs.rhel_version }}:latest

      - name: sign RPMs
        id: sign_rpm
        run: |
          RPMFILE=$(find "${{ github.workspace }}/RPMS" -name "*.rpm") || exit 1
          mkdir -p "$HOME/RPMS/"
          cp "$RPMFILE" "$HOME/RPMS/"
          echo "::set-output name=rpm_path::$HOME/RPMS/"
          RPMFILE=$(find "$HOME/RPMS" -name "*.rpm")
          rpmsign --addsign "$RPMFILE"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.rpm_artifact_name }}
          path: ${{ steps.sign_rpm.outputs.rpm_path }}
