name: RPM Build

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      rpm_name:
        required: true
        type: string
        description: "The name of the RPM."
      rhel_version:
        required: false
        type: number
        default: 8
        description: "Version of RHEL (Default: 8)."
      rpm_push_command:
        required: false
        type: string
        description: "Command which needs to be executed to push the rpm to something."
      rpm_source_path:
        required: false
        type: string
        default: "."
        description: "Path to the directory containing rpm SOURCES and spec file (Default: '.')."
      build_artifact:
        required: false
        type: string
        description: "Optional: name of uploaded build artifact that should be put into SOURCES folder before building."
    secrets:
      sign_key:
        required: true
        description: "Key to sign the RPM."
      sign_key_passphrase:
        required: true
        description: "Passphrase for sign Key."

jobs:
  build_rpm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Artifacts Directory
        run: mkdir BUILD_ARTIFACTS

      - name: Download Build Artifact
        if: ${{ inputs.build_artifact }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.build_artifact }}
          path: BUILD_ARTIFACTS

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build rpmbuild Container
        uses: docker/build-push-action@v2
        with:
          context: https://github.com/riege/rpm-build.git#main
          file: docker-build/Dockerfile.centos-${{ inputs.rhel_version }}
          load: true
          tags: build-rpm-rhel${{ inputs.rhel_version }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Determine Version
        id: version
        uses: riege/action-version@v1

      - name: Create ENV file
        run: |
          {
          echo "RPM_NAME=${{ inputs.rpm_name }}"
          echo "RPM_VERSION=${{ steps.version.outputs.version-without-v }}"
          echo "RPM_RELEASE=${{ github.run_number }}"
          echo "RPM_SIGN_KEY_PASSPHRASE=${{ secrets.sign_key_passphrase }}"
          } > .env

      - name: Prepare SOURCES
        working-directory: ${{ inputs.rpm_source_path }}
        run: |
          # cleanup unused .gitkeep files
          find SOURCES/ -iname .gitkeep -delete
          # make tarball from original SOURCES
          tar -czvf ${{ github.workspace }}/BUILD_ARTIFACTS/${{ inputs.rpm_name }}.tgz -C SOURCES/ .
          # move all build artifacts to SOURCES
          mv ${{ github.workspace }}/BUILD_ARTIFACTS/* SOURCES/

      - name: Build RPM
        env:
          RPM_SIGN_KEY: ${{ secrets.sign_key }}
        run: |
          echo "${RPM_SIGN_KEY}" > "rpm_signing_key.gpg"
          mkdir -p ${{ github.workspace }}/RPMS
          docker run --rm \
                     -v "${{ github.workspace }}/${{ inputs.rpm_source_path }}/SOURCES:/rpmbuild/SOURCES" \
                     -v "${{ github.workspace }}/RPMS:/rpmbuild/RPMS" \
                     -v "${{ github.workspace }}/rpm_signing_key.gpg:/rpmbuild/rpm_signing_key.gpg:ro" \
                     -v "${{ github.workspace }}/${{ inputs.rpm_source_path }}/${{ inputs.rpm_name }}.spec:/rpmbuild/SPECS/${{ inputs.rpm_name }}.spec:ro" \
                     --env-file .env \
                     build-rpm-rhel${{ inputs.rhel_version }}:latest

      - name: Cleanup
        if: always()
        run: |
          rm -Rf .env
          rm -Rf rpm_signing_key.gpg

      - uses: actions/upload-artifact@v2
        with:
          name: RPMs
          path: ${{ github.workspace }}/RPMS/

      - name: Push RPM
        if: ${{ inputs.rpm_push_command }}
        run: ${{ inputs.rpm_push_command }}
